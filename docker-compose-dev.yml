version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: devuser
      POSTGRES_PASSWORD: devpass
      POSTGRES_DB: devdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U devuser -d devdb"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  api:
    build: ./PythonAPI
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8081/health || exit 0" ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PORT: 8081
      PYTHONUNBUFFERED: 1

  backend:
    build: ./Backend
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/devdb
      SPRING_DATASOURCE_USERNAME: devuser
      SPRING_DATASOURCE_PASSWORD: devpass
      PYTHON_API_BASE_URL: "http://api:8081"
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    depends_on:
      postgres:
        condition: service_healthy
      api:
        condition: service_healthy

  frontend:
    build: ./Frontend
    ports:
      - "4200:4200"
    depends_on:
      backend:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4200 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  pgdata:
    name: lan-scanner-pgdata