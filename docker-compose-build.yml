version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: dev_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  backend:
    build: ./Backend
    container_name: portscanner_backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres
    networks:
      - app-network

  api:
    build: ./PythonAPI
    container_name: portscanner_api
    ports:
      - "8081:8080"
    environment:
      API_ENV: development
    depends_on:
      - postgres
    networks:
      - app-network

  frontend:
    build: ./Frontend
    container_name: portscanner_ui
    ports:
      - "4200:4200"
    environment:
      NG_APP_API_URL: http://backend:8080
    depends_on:
      - backend
      - api
    command: ["ng", "serve", "--host", "0.0.0.0", "--disable-host-check"]
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
